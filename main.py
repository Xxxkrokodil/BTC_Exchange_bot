from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Bot
import requests
import telegram
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, MessageHandler, Filters

def cancel(update, context):
    cancel_handler(update, context)

def cancel_handler(update, context):
    keyboard = [[InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ë–∏—Ç–∫–æ–∏–Ω', callback_data='option_1')],
                [InlineKeyboardButton('–ü—Ä–æ–º–æ–∫–æ–¥', callback_data='option_2'),
                 InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='option_3')],
                [InlineKeyboardButton('–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data='option_4'),
                 InlineKeyboardButton('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', callback_data='option_5')],
                [InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞ / –û–ø–µ—Ä–∞—Ç–æ—Ä', url="https://t.me/")],
                [InlineKeyboardButton('–û—Ç–∑—ã–≤—ã', url="https://t.me/")],
                [InlineKeyboardButton('–ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª', url="https://t.me/")],
                [InlineKeyboardButton('–ü—Ä–æ–¥–∞—Ç—å –±–∏—Ç–∫–æ–∏–Ω', callback_data='option_9')],
                [InlineKeyboardButton('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', callback_data='orders')],
                [InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞', callback_data='option_10')],
                [InlineKeyboardButton('‚ö° BTC Mixer', url="https://t.me/")],
                [InlineKeyboardButton('üì±–ù–∞–¥–µ–∂–Ω—ã–π VPN', url="https://t.me/")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(
        "‚úåÔ∏è –ë–æ—Ç –æ–±–º–µ–Ω–Ω–∏–∫! –¢—É—Ç –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å —Å–≤–æ–∏ RUB –Ω–∞ BTC. ‚úåÔ∏è\n\n –ï—Å–ª–∏ —Ç—ã '–Ω–æ–≤–∏—á–æ–∫' –∏ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É? - –ø–∏—à–∏ –º–Ω–µ \n\n –ñ–º–∏ –∫–Ω–æ–ø–∫—É 'üëâ –ö—É–ø–∏—Ç—å –ë–∏—Ç–∫–æ–∏–Ω üëà' –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ —Å—É–º–º—É –≤ RUB –∏–ª–∏ BTC\n \n–ü—Ä–∏–º–µ—Ä: 0.001 –∏–ª–∏ 0,001",
        reply_markup=reply_markup)


def main_menu(update, context):
    keyboard = [[InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ë–∏—Ç–∫–æ–∏–Ω', callback_data='option_1')],
                 [InlineKeyboardButton('–ü—Ä–æ–º–æ–∫–æ–¥', callback_data='option_2'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='option_3')],
                 [InlineKeyboardButton('–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data='option_4'),
                InlineKeyboardButton('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', callback_data='option_5')],
                 [InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞ / –û–ø–µ—Ä–∞—Ç–æ—Ä',  url="https://t.me/")],
                [InlineKeyboardButton('–û—Ç–∑—ã–≤—ã', url="https://t.me/BTC_MonopolyComments")],
                 [InlineKeyboardButton('–ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª', url="https://t.me/")],
                [InlineKeyboardButton('–ü—Ä–æ–¥–∞—Ç—å –±–∏—Ç–∫–æ–∏–Ω', callback_data='option_9')],
                 [InlineKeyboardButton('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', callback_data='orders')],
                [InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞', callback_data='option_10')],
                 [InlineKeyboardButton('‚ö° BTC Mixer', url="https://t.me/BTC_MONOPOLY_MIXER_BOT")],
                [InlineKeyboardButton('üì±–ù–∞–¥–µ–∂–Ω—ã–π VPN', url="https://t.me/YouFast_vpn_bot")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text("‚úåÔ∏è –ë–æ—Ç –æ–±–º–µ–Ω–Ω–∏–∫! –¢—É—Ç –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å —Å–≤–æ–∏ RUB –Ω–∞ BTC. ‚úåÔ∏è\n\n –ï—Å–ª–∏ —Ç—ã '–Ω–æ–≤–∏—á–æ–∫' –∏ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É? - –ø–∏—à–∏ –º–Ω–µ @MONOPOLYBANKEP\n\n –ñ–º–∏ –∫–Ω–æ–ø–∫—É 'üëâ –ö—É–ø–∏—Ç—å –ë–∏—Ç–∫–æ–∏–Ω üëà' –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ —Å—É–º–º—É –≤ RUB –∏–ª–∏ BTC\n \n–ü—Ä–∏–º–µ—Ä: 0.001 –∏–ª–∏ 0,001", reply_markup=reply_markup)

def process_amount(update, context):
    # Get the user's input
    user_input = update.message.text
    # Check if the input is a valid number
    if user_input.isdigit():
        # Convert the input to an integer
        user_amount = int(user_input)
        # Check if the user entered an amount in rubles or bitcoin
        if user_amount < 4:
            user_amount_float = float(user_amount)
            # The user entered an amount in bitcoin
            # Calculate the equivalent amount in rubles
            btc_rate = 16584.63  # current market rate for BTC in rubles
            user_amount_rubles = user_amount_float * btc_rate * 71
            # Add the commission to the total amount
            user_amount_rubles += 400
            # Display the amount in rubles and the payment options
            context.bot.send_message(chat_id=update.effective_chat.id,text=f"–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {user_amount_rubles} —Ä—É–±.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:")
            # Create a keyboard with options for payment methods
            keyboard = [[telegram.InlineKeyboardButton("–°–±–µ—Ä–±–∞–Ω–∫ ( {}—Ä—É–±.)".format(user_amount_rubles), callback_data="wallet")],
                        [telegram.InlineKeyboardButton("–°–±–µ—Ä–ë–∞–Ω–∫ MOSCOW ( {}—Ä—É–±.)".format(user_amount_rubles),
                                                       callback_data="wallet")],
                        [telegram.InlineKeyboardButton("–°–±–µ—Ä–±–∞–Ω–∫ –ü–∏—Ç–µ—Ä ({}—Ä—É–±.)".format(user_amount_rubles),
                                                       callback_data="wallet")],
                        [telegram.InlineKeyboardButton("Visa / MasterCard / –ú–ò–† ({}—Ä—É–±.)".format(user_amount_rubles),
                                                       callback_data="wallet")],
                        [telegram.InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∞.)", callback_data="cancel")]]
            reply_markup = telegram.InlineKeyboardMarkup(keyboard)
            context.bot.send_message(chat_id=update.effective_chat.id, text="–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:", reply_markup=reply_markup)
        elif 5000 > user_amount >= 500:
            # The user entered an amount in bitcoin
            user_amount = user_amount + (18/100*user_amount)
            context.bot.send_message(chat_id=update.effective_chat.id,
                                     text="–í—ã –≤–≤–µ–ª–∏ —Å—É–º–º—É –≤ RUB. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:")
            # Create a keyboard with options for payment methods
            keyboard = [[telegram.InlineKeyboardButton("–°–±–µ—Ä–±–∞–Ω–∫ ( {}—Ä—É–±.)".format(user_amount), callback_data="wallet")],
                        [telegram.InlineKeyboardButton("–°–±–µ—Ä–ë–∞–Ω–∫ MOSCOW ( {}—Ä—É–±.)".format(user_amount), callback_data="wallet")],
                        [telegram.InlineKeyboardButton("–°–±–µ—Ä–±–∞–Ω–∫ –ü–∏—Ç–µ—Ä ({}—Ä—É–±.)".format(user_amount), callback_data="wallet")],
                        [telegram.InlineKeyboardButton("Visa / MasterCard / –ú–ò–† {}—Ä—É–±.)".format(user_amount), callback_data="wallet")],
                        [telegram.InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∞.)", callback_data="cancel")]]
            reply_markup = telegram.InlineKeyboardMarkup(keyboard)
            context.bot.send_message(chat_id=update.effective_chat.id, text="–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:",
                                     reply_markup=reply_markup)
        elif user_amount >= 5000:
            # The user entered an amount in bitcoin
            user_amount = user_amount + (15/100*user_amount)
            context.bot.send_message(chat_id=update.effective_chat.id,
                                     text="–í—ã –≤–≤–µ–ª–∏ —Å—É–º–º—É –≤ RUB. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:")
            # Create a keyboard with options for payment methods
            keyboard = [[telegram.InlineKeyboardButton("–°–±–µ—Ä–±–∞–Ω–∫ ( {}—Ä—É–±.)".format(user_amount), callback_data="wallet")],
                        [telegram.InlineKeyboardButton("–°–±–µ—Ä–ë–∞–Ω–∫ MOSCOW ( {}—Ä—É–±.)".format(user_amount), callback_data="wallet")],
                        [telegram.InlineKeyboardButton("–°–±–µ—Ä–±–∞–Ω–∫ –ü–∏—Ç–µ—Ä ({}—Ä—É–±.)".format(user_amount), callback_data="wallet")],
                        [telegram.InlineKeyboardButton("Visa / MasterCard / –ú–ò–† {}—Ä—É–±.)".format(user_amount), callback_data="wallet")],
                        [telegram.InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∞.)", callback_data="cancel")]]
            reply_markup = telegram.InlineKeyboardMarkup(keyboard)
            context.bot.send_message(chat_id=update.effective_chat.id, text="–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:",
                                     reply_markup=reply_markup)


    elif 34>=len(user_input)>=27:

        # Define the text variable
        text = ""
        wallet = str(user_input)
        print("Wallet {}".format(wallet))
        return wallet

def convert_currency(amount, currency):
    # Make a request to the API to get the current exchange rate
    api_url = "https://api.coindesk.com/v1/bpi/currentprice/RUB.json"
    try:
        response = requests.get(api_url)
        response_json = response.json()
    except requests.exceptions.RequestException as e:
        print(f"An error occurred while making the API request: {e}")
        return

    # Extract the exchange rate from the API response
    try:
        exchange_rate = response_json["bpi"][currency]["rate_float"]
    except KeyError as e:
        print(f"An error occurred while processing the API response: {e}")
        return

    # Convert the amount to Bitcoins and the specified currency
    btc_amount = amount / exchange_rate
    currency_amount = amount

    # Return the conversion results
    return {
        "btc_amount": btc_amount,
        "currency_amount": currency_amount
        }
wallet = "3CCvPjdpB3d2Md8jw8KJspDKJY1A448qHa"
amount = 5000
currency = "RUB"
result = convert_currency(amount, currency)
if result:
    print(f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ: {result['btc_amount']:.8f} BTC")
    print(f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ: {result['currency_amount']} {currency}")

def button(update, context):
    # Get the callback data of the button that was pressed
    query = update.callback_query
    data = query.data
    # Define the text variable
    text = ""
    if data == "option_1":
        query = update.callback_query
        data = query.data
        # Define the text variable
        text = ""
        # Check if the input is a valid number
        if data == "option_1":

            context.bot.send_message(chat_id=update.effective_chat.id,
                                     text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ BTC –∏–ª–∏ RUB:\n\n –ü—Ä–∏–º–µ—Ä: 0.001 –∏–ª–∏ 0,001 –∏–ª–∏ 5030")
            # Add the MessageHandler to the dispatcher
            message_handler = MessageHandler(Filters.text, process_amount)
            context.dispatcher.add_handler(message_handler)
        else:
            print("didn't work")



    elif data == "option_2":
        text = "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥, —Ç–∞–∫ –∫–∞–∫ –≤–∞—à –±–∞–ª–∞–Ω—Å –≤ –±–æ—Ç–µ –±–æ–ª—å—à–µ 50 —Ä—É–±. –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞, - —Å–æ–∑–¥–∞–π—Ç–µ –æ–±–º–µ–Ω –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –°–ø–∏—Å–∞—Ç—å —Å –±–∞–ª–∞–Ω—Å–∞."
    elif data == "option_3":
        text = "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º: https://telegra.ph/Kak-polzovatsya-botom-11-26 \n\n –í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: https://youtu.be/-jFd532Fo0w \n\n –ù–µ —Ä–∞–∑–æ–±—Ä–∞–ª—Å—è —Å –±–æ—Ç–æ–º? –ü–∏—à–∏ –º–Ω–µ, –ø—Ä–æ–≤–µ–¥–µ–º –æ–±–º–µ–Ω –≤—Ä—É—á–Ω—É—é: \n –ü—Ä–æ–º–æ–∫–æ–¥—ã, –∞–∫—Ü–∏–∏, –∞ —Ç–∞–∫–∂–µ –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ: \n –ù–∞—à –∫–∞–Ω–∞–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏: @BTC_MonopolyComments"
    elif data == "option_4":
        # Create the four buttons"üîó –ú–æ—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞", callback_data="link"
        text = "–£—Å–ª–æ–≤–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã: –†–µ–∫–æ–º–µ–Ω–¥—É–π—Ç–µ –Ω–∞—à —Å–µ—Ä–≤–∏—Å, —Å—Ç—Ä–æ–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –æ—Ç –∫–∞–∂–¥–æ–≥–æ –æ–±–º–µ–Ω–∞ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –≤–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤!\n"
        keyboard = [[telegram.InlineKeyboardButton("üîó –ú–æ—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞", callback_data="option_1")],
                    [telegram.InlineKeyboardButton("üìù –ú–æ–∏ —Ñ–∏–Ω–∞–Ω—Å—ã", callback_data="option_2"),
                     telegram.InlineKeyboardButton("üìñ–ü–æ–º–æ—â—å", callback_data="option_3")],
                    [telegram.InlineKeyboardButton("–í—ã–≤–æ–¥ –∫–æ–º–∏—Å—Å–∏–æ–Ω–Ω—ã—Ö (–∫–æ—à–µ–ª–µ–∫)", callback_data="option_4")]]

        inline_keyboard = telegram.InlineKeyboardMarkup(keyboard)
        update.callback_query.edit_message_text(text, reply_markup=inline_keyboard)
        return telegram.Update.DEFAULT

    elif data == "option_5":
        text = "–ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏:  \n\n–ù–∞—à –∫–∞–Ω–∞–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏: @BTC_MonopolyComments\n\n –ù–æ–≤–æ—Å—Ç–∏ –Ω–∞—à–µ–≥–æ –æ–±–º–µ–Ω–Ω–∏–∫–∞, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã, –∞–∫—Ü–∏–∏ –∏ –∫–æ–Ω–∫—É—Ä—Å—ã –≤ –Ω–∞—à–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ:@ "
    elif data == "option_10":
        text = "1. –ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É—Å–ª—É–≥ –æ–±–º–µ–Ω–Ω–∏–∫–∞ –¥–ª—è –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π. –ö–ª–∏–µ–Ω—Ç –æ–±—è–∑—É–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–µ –µ–≥–æ –ª–∏—á–Ω–æ—Å—Ç—å, –≤ —Å–ª—É—á–∞–µ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏—è –æ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–µ –∏/–∏–ª–∏ –æ—Ç–º—ã–≤–∞–Ω–∏–∏ –¥–µ–Ω–µ–≥.\n\n"
        text += "2. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±–º–µ–Ω–Ω–∏–∫–∞ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –æ—Ç–∫–∞–∑–∞—Ç—å –≤ –∑–∞–∫–ª—é—á–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏, –ø—Ä–∏—á–µ–º –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω. –î–∞–Ω–Ω—ã–π –ø—É–Ω–∫—Ç –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –ª—é–±–æ–º—É –∫–ª–∏–µ–Ω—Ç—É.\n\n"
        text += "3. –°—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ: —Å–æ–≤–µ—Ä—à–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ –Ω–æ–º–µ—Ä—É 900; –æ–ø–ª–∞—á–∏–≤–∞—Ç—å —Å –±–∞–Ω–∫–æ–º–∞—Ç–æ–≤ –∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤; —Å–æ–≤–µ—Ä—à–∞—Ç—å –æ–ø–ª–∞—Ç—É 2-–º—è –∏–ª–∏ –±–æ–ª–µ–µ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º.\n\n"
        text += "4. –î–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–µ–∑–∞–∫–æ–Ω–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, –æ–±–º–µ–Ω–Ω–∏–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å–∏—Å—Ç–µ–º—É –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞), –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â—É—é –≤—Å–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏."

    elif data == "option_9":
        text = "–ü–æ–∫—É–ø–∞–µ–º –æ—Ç 10000 —Ä—É–±. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å BTC, –ø–∏—à–∏—Ç–µ "


    elif data == "wallet":
        text = "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫ BTC. –ë–æ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç –µ–≥–æ –∏ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–º–µ–Ω–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –≤ –≤–∏–¥–µ —É–¥–æ–±–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:"
        keyboard = [[telegram.InlineKeyboardButton("‚úÖ —Å–æ–≥–ª–∞—Å–Ω–æ", callback_data="precard")],
                    [telegram.InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∞", callback_data="option_1")]]

        inline_keyboard = telegram.InlineKeyboardMarkup(keyboard)
        update.callback_query.edit_message_text(text, reply_markup=inline_keyboard)
        return telegram.Update.DEFAULT

    elif data == "card":
        text = "5xx3"

    elif data == "precard":
        text = "–í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É –∑–∞–∫–∞–∑–∞ 15 –º–∏–Ω—É—Ç!\n\n–û–±—Ä–∞—â–∞–µ–º –≤–Ω–∏–º–∞–Ω–∏–µ: —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ —Å–≤–æ–µ–π –ª–∏—á–Ω–æ–π –∫–∞—Ä—Ç—ã. \n\n –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞ –∏–ª–∏ –∑–∞–¥–µ—Ä–∂–∞—Ç—å –æ–±–º–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –°—Ä–µ–¥—Å—Ç–≤–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –±–µ–∑ –∑–∞—è–≤–∫–∏, –≤–æ–∑–≤—Ä–∞—Ç—É –Ω–µ –ø–æ–¥–ª–µ–∂–∞—Ç! –û–ø–ª–∞—á–∏–≤–∞—Ç—å –≤—ã –¥–æ–ª–∂–Ω—ã —Ä–æ–≤–Ω–æ —Ç—É —Å—É–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —É–∫–∞–∑–∞–Ω–∞ –≤ –∑–∞—è–≤–∫–µ, –∏–Ω–∞—á–µ –≤–∞—à –ø–ª–∞—Ç–µ–∂ ¬´–∑–∞—Ç–µ—Ä—è–µ—Ç—Å—è¬ª.  –í—Å–µ –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏ –ø–æ –æ–±–º–µ–Ω—É –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤.\n\n–í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û —Å–≤–µ—Ä—è–π—Ç–µ –∞–¥—Ä–µ—Å —Å–≤–æ–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞! \n\n –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫ {}\n\n –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å, –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–ø–ª–∞—Ç–æ–π, –ø–∏—à–∏—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫–µ: @ \n\n –í—ã —Å–æ–≥–ª–∞—Å–Ω—ã –Ω–∞ –æ–±–º–µ–Ω?".format(wallet)
        keyboard = [[telegram.InlineKeyboardButton("‚úÖ —Å–æ–≥–ª–∞—Å–Ω–æ", callback_data="card")],
                    [telegram.InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∞", callback_data="option_1")]]

        inline_keyboard = telegram.InlineKeyboardMarkup(keyboard)
        update.callback_query.edit_message_text(text, reply_markup=inline_keyboard)
        return telegram.Update.DEFAULT
    elif data == "cancel":
        cancel_handler(update, context)
        return telegram.Update.DEFAULT


    # Edit the message to display the new text
    query.edit_message_text(text=text)






def start(update, context):
    main_menu(update, context)


updater = Updater("59xg", use_context=True)
bot = Bot("59376696xxg")
start_handler = CommandHandler('start', start)
updater.dispatcher.add_handler(start_handler)
updater.dispatcher.add_handler(CallbackQueryHandler(button))
updater.start_polling()
updater.idle()
dp = updater.dispatcher
dp.add_handler(CommandHandler("start", lambda update, context: print("/start command received")))
dp.add_handler(MessageHandler(Filters.text, process_amount))
cancel_handler = CommandHandler("cancel", cancel)
updater.dispatcher.add_handler(cancel_handler)

